generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement())
  idvk       Int
  name       String
  lvl        Int        @default(1)
  xp         Float      @default(0)
  gold       Float      @default(350)
  energy     Float      @default(0)
  reputation Float      @default(0)
  crdate     DateTime   @default(now())
  update     DateTime   @default(now())
  Antiflud   Antiflud[]
  Bulder     Builder[]
  Worker     Worker[]
}

model Builder {
  id      Int      @id @default(autoincrement())
  name    String
  lvl     Int      @default(1)
  xp      Float    @default(0)
  income  Float    @default(1)
  worker  Int      @default(1)
  count   Int      @default(1)
  id_user Int
  crdate  DateTime @default(now())
  update  DateTime @default(now())
  user    User     @relation(fields: [id_user], references: [id], onDelete: Cascade, onUpdate: Cascade)
  Worker  Worker[]
}

model Worker {
  id         Int      @id @default(autoincrement())
  name       String
  lvl        Int      @default(1)
  xp         Float    @default(0)
  income     Float    @default(0)
  speed      Float    @default(1)
  salary     Float    @default(1)
  gold       Float    @default(0)
  reputation Float    @default(0)
  point      Int
  id_user    Int
  id_builder Int @default(0)
  crdate     DateTime @default(now())
  update     DateTime @default(now())
  user       User     @relation(fields: [id_user], references: [id], onDelete: Cascade, onUpdate: Cascade)
  builder    Builder  @relation(fields: [id_builder], references: [id])
}

model Antiflud {
  id           Int      @id @default(autoincrement())
  id_user      Int      @unique
  id_message   String
  date_message DateTime
  busy         Boolean
  user         User     @relation(fields: [id_user], references: [id], onDelete: Cascade, onUpdate: Cascade)
}
