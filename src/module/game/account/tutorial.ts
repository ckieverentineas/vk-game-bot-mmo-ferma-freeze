import { User } from "@prisma/client";
import { answerTimeLimit, chat_id, timer_text, vk } from "../../../";
import prisma from "../../prisma";
import { Context, Keyboard } from "vk-io";

export async function User_Register(context: Context) {
    //—Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É
	const answer = await context.question(`‚åõ –ö–∞–∫ —Ç–æ–ª—å–∫–æ –≤—ã –æ—Ç–∫—Ä—ã–ª–∏ –¥–≤–µ—Ä—å –æ—Ñ–∏—Å–∞ üè¶, –∏–∑ –Ω–∏–æ—Ç–∫—É–¥–∞ –ø–µ—Ä–µ–¥ –≤–∞–º–∏ –ø—Ä–µ–¥—Å—Ç–∞–ª–∏ –¥–≤–æ–µ –≤ —á–µ—Ä–Ω—ã—Ö –æ—á–∫–∞—Ö –∏ –Ω–∞–¥–º–µ–Ω–Ω–æ —Å–∫–∞–∑–∞–ª–∏: \n ‚Äî –í–∞—à –æ—Ç–µ—Ü —Å–∫–æ–Ω—á–∞–ª—Å—è –∏ –º—ã –µ–≥–æ –∑–∞–º–µ—Å–∏–ª–∏, –∞ –≤—ã –∑–¥–µ—Å—å –≤–ø–µ—Ä–≤—ã–µ. –ü—Ä–µ–∂–¥–µ —á–µ–º —É–ø—Ä–∞–≤–ª—è—Ç—å, —Ä–∞—Å–ø–∏—à–∏—Ç–µ—Å—å –∑–¥–µ—Å—å –æ —Å–≤–æ–µ–º —Å–æ–≥–ª–∞—Å–∏–∏ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö. \n –í —Ç–æ—Ç –∂–µ –º–∏–≥ –≤ –∏—Ö —Ä—É–∫–∞—Ö –º–∞–≥–∏—á–µ—Å–∫–∏–º –æ–±—Ä–∞–∑–æ–º –ø–æ—è–≤–∏–ª—Å—è –ø–µ—Ä–≥–∞–º–µ–Ω—Ç –∏ –∞–≤—Ç–æ–º–∞—Ç—ã –ê–ö-47. \n üí° –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ, –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã –≤ –Ω–∞—à–µ–º –æ—Ñ–∏—Å–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω—ã 5 –º–∏–Ω—É—Ç–∞–º–∏ –Ω–∞ –≤–∞—à–∏ –æ—Ç–≤–µ—Ç—ã –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è!`,
        {	
            keyboard: Keyboard.builder()
            .textButton({ label: '‚úè', payload: { command: '–°–æ–≥–ª–∞—Å–∏—Ç—å—Å—è' }, color: 'positive' }).row()
            .textButton({ label: 'üë£', payload: { command: '–û—Ç–∫–∞–∑–∞—Ç—å—Å—è' }, color: 'negative' }).oneTime(),
            answerTimeLimit
        }
    );
    if (answer.isTimeout) { return await context.send(`‚è∞ –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–æ–≥–ª–∞—Å–∏—è –∏—Å—Ç–µ–∫–ª–æ, –≤–∞—Å —Ç–æ–∂–µ –∑–∞–º–µ—Å–∏–ª–∏!`) }
    if (!/–¥–∞|yes|–°–æ–≥–ª–∞—Å–∏—Ç—å—Å—è|–∫–æ–Ω–µ—á–Ω–æ|‚úè/i.test(answer.text|| '{}')) {
        await context.send('‚åõ –í—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –¥–∞—Ç—å —Å–≤–æ–µ —Å–æ–≥–ª–∞—Å–∏–µ, –∞ –∂–∏–≤—ã–º –æ—Ç—Å—é–¥–∞ –Ω–∏–∫—Ç–æ –Ω–µ —É—Ö–æ–¥–∏–ª, –≤–∞—Å —É–ø–∞–∫–æ–≤–∞–ª–∏!');
        return;
    }
    //–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏–≥—Ä–æ–∫–∞
    const visit = await context.question(`‚åõ –ü–æ—Å—Ç–∞–≤–∏–≤ —Å–≤–æ—é –ø–æ–¥–ø–∏—Å—å, –≤—ã, —Å—Ç–∞—Ä–∞—è—Å—å –Ω–µ —Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ—Å–æ –Ω–∞ –∫—Ä—É—Ç—ã—Ö —Ç–∏–ø–æ–≤ –≤ —á–µ—Ä–Ω—ã—Ö –æ—á–∫–∞—Ö, —Å–µ–ª–∏ –≤ —Å–≤–æ–µ –Ω–æ–≤–æ–µ –∫—Ä–µ—Å–ª–æ –±–æ—Å—Å–∞, –∑–∞–ø—É—Å—Ç–∏–ª–∏ –∫–æ–º–ø—å—é—Ç–µ—Ä –≤ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–º –¥–æ–º–µ–Ω–µ.`,
        { 	
            keyboard: Keyboard.builder()
            .textButton({ label: '–û—Ç–∫—Ä—ã—Ç—å —Å–∞–ø–µ—Ä—ã', payload: { command: '–°–æ–≥–ª–∞—Å–∏—Ç—å—Å—è' }, color: 'positive' }).row()
            .textButton({ label: '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ –æ–∫–Ω–æ', payload: { command: '–û—Ç–∫–∞–∑–∞—Ç—å—Å—è' }, color: 'negative' }).oneTime().inline(),
            answerTimeLimit
        }
    );
    if (visit.isTimeout) { return await context.send(`‚è∞ –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏—Å—Ç–µ–∫–ª–æ!`) }
    let name = null
    while (!name) {
        const name_in = await context.question( `üß∑ –ß–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è –≤—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–ª–∏—Å—å –ø–æ–¥ —Å–≤–æ–µ–π —É—á–µ—Ç–∫–πüè¶! –°—É–¥—è –ø–æ –≤—Å–µ–º—É, –≤—ã –∑–¥–µ—Å—å –≤–ø–µ—Ä–≤—ã–µ. –ù–∞–∑–æ–≤–∏—Ç–µ –≤–∞—à–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é. \n ‚ùó –í–Ω–∏–º–∞–Ω–∏–µ! –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ–¥–æ–º–æ –ª–æ–∂–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø—Ä–µ—Å–ª–µ–¥—É—é—Ç—Å—è –∑–∞–∫–æ–Ω–æ–º!`, timer_text)
        if (name_in.isTimeout) { return await context.send(`‚è∞ –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ –∏—Å—Ç–µ–∫–ª–æ!`) }
        if (name_in.text.length <= 64) {
            name = name_in.text
            if (name_in.text.length > 32) { await context.send(`‚ö† –í–∞—à–∏ –§–ò–û –Ω–µ –≤–ª–µ–∑–∞—é—Ç –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –±–ª–∞–Ω–∫ (32 —Å–∏–º–≤–æ–ª–∞)! –°–∏—Å—Ç–µ–º–∞ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–ª–∞–Ω–∫ –ø–æ–≤—ã—à–µ–Ω–Ω–æ–π —à–∏—Ä–∏–Ω—ã, –Ω–æ –Ω—É–∂–Ω–æ –¥–æ–ø–ª–∞—Ç–∏—Ç—å 1‚Ç™ –∑–∞ –∫–∞–∂–¥—ã–π –Ω–µ –ø–æ–º–µ—Å—Ç–∏–≤—à–∏–π—Å—è —Å–∏–º–≤–æ–ª.`) }
        } else { await context.send(`‚õî –í–∞—à–∏ –§–ò–û –Ω–µ –≤–ª–µ–∑–∞—é—Ç –Ω–∞ –±–ª–∞–Ω–∫ –ø–æ–≤—ã—à–µ–Ω–Ω–æ–π —à–∏—Ä–∏–Ω—ã (64 —Å–∏–º–≤–æ–ª–∞), –∏ –≤–æ–æ–±—â–µ, –∑–∞–ø—Ä–µ—â–µ–Ω—ã —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–º –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ–º! –í—ã–ø–ª–∞—Ç–∏—Ç–µ —à—Ç—Ä–∞—Ñ –≤ 30‚Ç™ –∏–ª–∏ –ª—é–¥–∏ –≤ —á–µ—Ä–Ω–æ–º —Å–µ–π—á–∞—Å –≤–∞—Å –∑–∞–º–µ—Å—è—Ç.`) }
    }
    const save: User = await prisma.user.create({	data: {	idvk: context.senderId, name } })
    if (save) {
        await context.send(`‚åõ –£—Å–ø–µ—à–Ω—ã–π –∑–∞–ø—É—Å–∫ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –∑–ª–∞ –ø–æ–¥ —ç–≥–∏–¥–æ–π ${save.name}. \n ‚öñ–í–∞–º –æ—Ç–∫—Ä—ã—Ç —Å—á–µ—Ç –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—è –ø–æ–¥ UID: ${save.id}. \n üè¶–í–∞–º –∑–∞—á–∏—Å–ª–µ–Ω–æ ${save.gold} —à–µ–∫–µ–ª–µ–π`)
        console.log(`Success save user idvk: ${context.senderId}`)
    }
    
    //await context.send(`‚Äº –°–ø–∏—Å–æ–∫ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–µ—â–µ–π: \n 1. –í–æ–ª—à–µ–±–Ω–∞—è –ø–∞–ª–æ—á–∫–∞ \n 2. –°–æ–≤–∞, –∫–æ—à–∫–∞ –∏–ª–∏ –∂–∞–±–∞ \n 3. –ö–æ–º–ø–ª–µ–∫—Ç —É—á–µ–±–Ω–∏–∫–æ–≤ \n \n –ü–æ—Å–µ—Ç–∏—Ç–µ –ö–æ—Å–æ–π –ø–µ—Ä–µ—É–ª–æ–∫ –∏ –ø—Ä–∏–æ–±—Ä–µ—Ç–∏—Ç–µ –∏—Ö –ø–µ—Ä–≤—ã–º –¥–µ–ª–æ–º!`)
    await vk.api.messages.send({
        peer_id: chat_id,
        random_id: 0,
        message: `‚Åâ@id${save.idvk}(${save.name}) –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å–≤–æ–π –±–∏–∑–Ω–µ—Å –ø–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—É UID: ${save.id}!`
    })
}